import os
from flask import Flask, request, jsonify

app = Flask(__name__)

# تعریف گراف مترو
metro_graph = {}

lines = {
    "Line1": ["تجریش", "قیطریه", "شهید صدر", "قلهک", "دکتر شریعتی", "میرداماد",
              "شهید حقانی", "شهید همت", "مصلی امام خمینی", "شهید بهشتی", "شهید مفتح",
              "شهدای هفتم تیر", "طالقانی", "دروازه دولت", "سعدی", "امام خمینی",
              "پانزده خرداد", "خیام", "میدان محمدیه", "شوش", "ترمینال جنوب", "شهید بخارایی",
              "علی اباد", "جوانمرد قصاب", "شهر ری", "پالایشگاه", "باقر شهر - شاهد", "کهریزک"],
    
    "Line2": ["فرهنگسرا", "تهرانپارس", "دانشگاه علم و صنعت", "سرسبز", "جانبازان", "فدک", "سبلان",
              "شهید مدنی", "امام حسین", "دروازه شمیران", "بهارستان", "ملت", "امام خمینی",
              "حسن اباد", "دانشگاه امام علی", "میدان حر", "شهید نواب صفوی", "شادمان", "دانشگاه شریف", "طرشت", "صادقیه"],
    
    "Line3": ["قائم", "شهید محلاتی", "اقدسیه", "نوبنیاد", "حسین اباد", "هروی", "زین الدین",
              "خواجه عبدالله انصا ری", "صیاد شیرازی", "شهید قدوسی", "سهروردی", "شهید بهشتی", "میرزای شیرازی", "میدان جهاد",
              "میدان ولیعصر", "تئاتر شهر", "منیریه", "مهدیه", "راه اهن", "جوادیه", "زمزم",
              "شریعتی", "عبدل اباد", "نعمت اباد", "ازادگان"],
    
    "Line4": ["شهید کلاهدوز", "نیرو هوایی", "نبرد", "پیروزی", "ابن سینا", "میدان شهدا",
              "دروازه شمیران", "دروازه دولت", "فردوسی", "تئاتر شهر", "میدان انقلاب", "توحید",
              "شادمان", "دکتر حبیب اله", "استاد معین", "میدان ازادی", "1,2فرودگاه مهراباد پایانه ", "فرودگاه مهراباد پایانه 4و6",
              "شهرک اکباتان", "ارم سبز", "علامه جعفری", "ایت الله کاشانی", "چهارباغ"],
    
    "Line5": ["صادقیه", "ارم سبز", "استادیوم ازادی", "چیتگر", "ایران خودرو", "ورداورد",
              "گرمدره", "اتمسفر", "کرج", "محمد شهر", "گلشهر", "شهید سلیمانی"],
    
    "Line6": ["حرم عبدالعظیم", "میدان حضرت عبدالعظیم", "ابن بابویه", "چشمه علی", "دولت اباد", "کیان شهر",
              "بعثت", "شهید رضایی", "میدان خراسان", "شهدای هفده شهریور", "امیر کبیر", "میدان شهدا",
              "امام حسین", "سرسبز", "بهارشیراز", "شهدای هفتم تیر", "شهید نجات اللهی",
              "میدان ولیعصر", "پارک لاله", "کارگر", "دانشگاه تربیت مدرس", "شهرک ازمایش", "مرزداران",
              "یادگار امام", "شهید اشرفی اصفهانی", "شهید ستاری", "ایت اله کاشانی", "شهر زیبا", "شهران", "شهدای کن", "کوهسار"],
    
    "Line7": ["میدان کتاب", "شهید دادمان", "میدان صنعت", "برج میلاد", "بوستان گفتگو",
              "دانشگاه تربیت مدرس", "مدافعان سلامت", "توحید", "شهید نواب صفوی", "رودکی", "کمیل", "بریانک",
              "حلال احمر", "مهدیه", "میدان محمدیه", "مولوی", "قیام", "شهدای هفده شهریور",
              "چهل تن دولاب", "اهنگ", "بسیج", "ورزشگاه تختی"]
}

for line, stations in lines.items():
    for i in range(len(stations)):
        if stations[i] not in metro_graph:
            metro_graph[stations[i]] = {}
        if i > 0:
            metro_graph[stations[i]][stations[i - 1]] = 1
        if i < len(stations) - 1:
            metro_graph[stations[i]][stations[i + 1]] = 1

def shortest_path(graph, start, end):
    queue = deque([(start, [start])])
    visited = set()
    while queue:
        station, path = queue.popleft()
        if station == end:
            return " -> ".join(path)
        if station not in visited:
            visited.add(station)
            for neighbor in graph.get(station, []):
                queue.append((neighbor, path + [neighbor]))
    return "مسیر یافت نشد"

@app.route("/")
def home():
    return "API is running on Railway!"

@app.route("/find-route", methods=["POST"])
def find_route():
    data = request.get_json()
    if not data or "start" not in data or "end" not in data:
        return jsonify({"error": "لطفاً مبدا و مقصد را وارد کنید"}), 400
    start = data["start"]
    end = data["end"]
    result = shortest_path(metro_graph, start, end)
    return jsonify({"result": result})

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))  # Railway خودش پورت رو مشخص می‌کنه
    app.run(host="0.0.0.0", port=port)
